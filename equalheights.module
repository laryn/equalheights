<?php
/**
 * @file
 * Adds a jQuery plugin that sets the elements you specify to the same height.
 *
 * This module implements a jQuery plugin that can equalize the height of the
 * user specified elements with the same class.
 * By default, the height of the tallest element is used, but minimum and
 * maximum height can also be set.
 * The format for the admin settings should be 'classname:minheight,maxheight'.
 * To find out more about the plugin, go to
 * http://www.cssnewbie.com/equalheights-jquery-plugin/
 */
/**
* Implements hook_help().
*/
function equalheights_help($path = '', $arg = NULL) {
  $output = '';
  switch ($path) {
    case 'admin/help#equalheights':
    case 'admin/config/equalheights':
      $output = '<p>' .  t("Implements a jQuery plugin that makes the height of the elements equal.") . '</p>';
      break;
  }
  return $output;
} // function equalheights_help

/**
 * Implements hook_library().
 */
function equalheights_library() {
  $libraries['jquery-equalheights'] = array(
    'title' => "Equalheights jQuery",
    'website' => 'http://www.cssnewbie.com/equalheights-jquery-plugin/',
    'version' => '1.0',
    'js' => array(
      drupal_get_path('module', 'equalheights') . '/jquery.equalheights.js' => array(),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_init().
 */
function equalheights_init() {
  // Adding jquery.equalheights.js as a library
  drupal_add_library('equalheights', 'jquery-equalheights', TRUE);

  $equalheightsclasses = variable_get('equalheights_css_classes', array());
  if (!empty($equalheightsclasses)) {
	  // Only load settings once
    static $loaded = FALSE;
  	if (!$loaded) {
      drupal_add_js(array('equalHeightsModule' => $equalheightsclasses), 'setting');
      $loaded = TRUE;
	  }
  }
} // function equalheights_init

/**
 * Implements hook_menu().
 */
function equalheights_menu() {
  $items = array();
  $items['admin/config/development/equalheights'] = array(
    'title' => 'Equal Heights',
    'description' => 'Configure elements with equal heights.',
    'access arguments' => array('administer site configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('equalheights_admin'),
    'file' => 'equalheights.admin.inc',
  );
  return $items;
} // function equalheights_menu

/*
 * Implements hook_theme().
 */
function equalheights_theme() {
  return array(
    'equalheights_classes' => array(
      'render element' => 'form',
      'file' => 'equalheights.admin.inc',
    )
  );
}

//function equalheights_js_alter(&$javascript) {
//  dpm($javascript);
//}